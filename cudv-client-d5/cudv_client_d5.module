<?
require_once("cudv_api.inc");

function cudv_client_d5_get_d7_uid($user) {
    $token = explode("/", $user->init);
    return intval($token[4]);
}

function cudv_client_d5_create_user_if_none($user) {
    $d7id = cudv_client_d5_get_d7_uid($user);
    $ex_user = cudv_api_get_user($d7id);
    if(empty($ex_user)) {
        cudv_api_post_user($d7id, $user->name, $user->mail, "test/test", $user->created);
    }
    return $d7id;
}

function cudv_client_d5_create_product_if_none($product) {
    $ex_prod = cudv_api_get_product($product->nid);
    if(empty($ex_prod)) {
        cudv_api_post_product($product->nid, $product->title, $product->price);
    }
}

function cudv_client_d5_get_product_partner($product) {
    foreach($product->taxonomy as $t) {
        if($t->vid == variable_get('ts_donor_vid', 2)) {
            return $t->name;
        }
    }
}

function cudv_client_d5_ec_transactionapi(&$txn, $op, $a3 = NULL, $a4 = NULL) {
    global $user;
    $products = array();

    switch($op) { 
    case "insert":
        $t = store_transaction_load($txn->txnid);
        foreach($t->items as $item) {
            $node = node_load($item->nid);
            cudv_client_d5_create_product_if_none($node);
            $products[] = $node->nid;
        }

        $d7uid = cudv_client_d5_create_user_if_none($user);
        $partner = cudv_client_d5_get_product_partner(node_load(reset($products)));
        cudv_api_post_order($txn->txnid, $d7uid, $partner, 1, $txn->gross, $products);
        break;
    }
}

?>
